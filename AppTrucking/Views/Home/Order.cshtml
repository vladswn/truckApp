@*@model AppTrucking.Models.Order*@
@using AppTrucking.Models
@model Order
@{
    ViewBag.Title = "Замовити перевезення";
}

<div class="row" style="margin-top:50px;margin-bottom:100px;">
    <div class="col-md-5">
        <div class="form-horizontal">
            @using (Html.BeginForm("Order", "Home",FormMethod.Post, new { name= "myForm", id = "myForm"}))
            {
                <h2 class="text-center">Замовити перевезення!</h2>
                <h3 class="text-danger">@ViewBag.NotFree</h3>
                <br />
                <div class="form-group">
                    @Html.Label("Точка відправки:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input id="travelfrom" type="text" name="from" value="Харьковская область, Украина" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Toчка прибуття :", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input id="travelto" type="text" name="to" value="Киевская область, Украина" class="form-control" />
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Побудувати маршрут:", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input type="button" value="Побудувати шлях" onclick="GetRoute()" class="btn btn-default" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Відстань (км) :", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input type="text" name="distance" id="distance" value="0" readonly class="form-control">
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Тривальсть (г) :", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <input type="text" name="time" id="time" value="0" readonly class="form-control"><br>
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Машина", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.CarId, ViewBag.CarId as SelectList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CarId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Вага (кг)", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Об'єм", htmlAttributes: new { @class = "control-label col-md-4" })<strong>м<sup><small>3</small></sup></strong> 
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Volume, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Volume, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Додаткові послуги", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-6 col-md-push-2">
                        @foreach (Service item in ViewBag.ServiceList)
                        {
                            <div class="checkbox">
                                <label>
                                    <input type="checkbox"
                                           name="selectedService"
                                           value="@item.ServiceId" />
                                    @item.Title
                                </label>
                            </div>
                            
                        }
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Додатковий опис", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                       @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", rows = "5"} })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Дата завантаження", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.TextBox("orderTime", string.Format("{0:dd MMM yyy}", DateTime.Now), new { @class = "datefield form-control", type = "date" })*@
                    </div>
                </div>

                if (ViewBag.Dis != 0)
                {
                    <div class="form-group">
                        <div class="col-md-offset-9 col-md-3">
                            <input type="submit" value="Замовити" class="btn btn-primary" />
                        </div>
                    </div>
                }

            }
         </div>
     </div>
    <div class="col-md-7" id="dvMap" style="min-height:500px">

    </div>
</div>

@*<div class="row">
    <div class="col-md-12" id="dvMap" style="min-height:500px">
        
    </div>
</div>*@


@section scripts{
    <!-- code for example 1 -->
    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('dvMap'), {
                center: { lat: -34.397, lng: 150.644 },
                zoom: 10,
                mapTypeId: 'roadmap',
                disableDefaultUI: true,
                useStaticMap:true
            });
            var infoWindow = new google.maps.InfoWindow({ map: map });

            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    infoWindow.setPosition(pos);
                    infoWindow.setContent('Location found.');
                    map.setCenter(pos);
                }, function () {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        }

        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                                  'Error: The Geolocation service failed.' :
                                  'Error: Your browser doesn\'t support geolocation.');
        }

    </script>
    <!--ENSURE YOU CHANGE TO YOUR OWN API KEY HERE !!! -->
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyBzAhLwzH5DFthuYugTOUSmJ7RqEFuIKPk&callback=initMap" type="text/javascript"></script>
    <script>
        var source, destination;
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();


        var map = new google.maps.Map(document.getElementById('dvMap'), {
            center: { lat: -34.397, lng: 150.644 },
            zoom: 10,
            mapTypeId: 'roadmap',
            disableDefaultUI: true,
        });
        var infoWindow = new google.maps.InfoWindow({ map: map });

        // Try HTML5 geolocation.
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                infoWindow.setPosition(pos);
                infoWindow.setContent('Location found.');
                map.setCenter(pos);
            }, function () {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }


        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                                  'Error: The Geolocation service failed.' :
                                  'Error: Your browser doesn\'t support geolocation.');
        }


        google.maps.event.addDomListener(window, 'load', function () {
            new google.maps.places.SearchBox(document.getElementById('travelfrom'));
            new google.maps.places.SearchBox(document.getElementById('travelto'));
            directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': false });
        });

        function GetRoute() {

            directionsDisplay.setMap(map);

            source = document.getElementById("travelfrom").value;
            destination = document.getElementById("travelto").value;

            var request = {
                origin: source,
                destination: destination,
                travelMode: google.maps.TravelMode.DRIVING
            };

            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);
                }
            });

            //*********DISTANCE AND DURATION**********************//
            var service = new google.maps.DistanceMatrixService();
            service.getDistanceMatrix({
                origins: [source],
                destinations: [destination],
                travelMode: google.maps.TravelMode.DRIVING,
                unitSystem: google.maps.UnitSystem.METRIC,
                avoidHighways: false,
                avoidTolls: false
            }, function (response, status) {

                if (status == google.maps.DistanceMatrixStatus.OK && response.rows[0].elements[0].status != "ZERO_RESULTS") {
                    //var distance = response.rows[0].elements[0].distance.text;
                    var distance = response.rows[0].elements[0].distance.value;
                    var duration = response.rows[0].elements[0].duration.value;
                    var dvDistance = document.getElementById("dvDistance");
                    duration = parseFloat(duration / 60).toFixed(2);
                    //dvDistance.innerHTML = "";
                    //dvDistance.innerHTML += "Distance: " + distance + "<br />";
                    //dvDistance.innerHTML += "Time:" + duration + " min";

                    var a = document.getElementById("distance");
                    var dist =(distance / 1000).toFixed(2) 
                    a.value = dist.replace('.',',');
                    //a.value = dist;
                    var b = document.getElementById("time");
                    var tm = (duration / 60).toFixed(2);
                    b.value = tm.replace('.', ',');
                    //b.value = tm;
                    //document.forms['myForm']['distance'] = (distance / 1000).toFixed(2);
                    //document.forms['myForm']['time'] = (duration / 60).toFixed(2);

                } else {
                    alert("Unable to find the distance via road.");
                }
            });
        }
    </script>
    <!-- end code for example 1 -->
}
